"use strict";(self.webpackChunkinvictus_integration=self.webpackChunkinvictus_integration||[]).push([[9328],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},8908:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"framework/regextranslation","title":"Regex Translation","description":"At the time of writing, there is no built-in Logic App functionality available to run regular expression replacements without using inline code. The Invictus Regex Translation Framework component was created to fill this missing gap, by providing a HTTP-endpoint to run regular expression replacements. Available translations are stored in an Azure Table Storage.","source":"@site/versioned_docs/version-v6.0.0/framework/regextranslation.md","sourceDirName":"framework","slug":"/framework/regextranslation","permalink":"/docs-ifa/framework/regextranslation","draft":false,"unlisted":false,"editUrl":"https://github.com/invictus-integration/docs-ifa/edit/master/docs/versioned_docs/version-v6.0.0/framework/regextranslation.md","tags":[],"version":"v6.0.0","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Publish and subscribe","permalink":"/docs-ifa/framework/pubsubV2"},"next":{"title":"Sequence Controller","permalink":"/docs-ifa/framework/sequencecontroller"}}');var s=t(4848),i=t(8453);const o={},a="Regex Translation",l={},c=[{value:"Regex translate user content",id:"regex-translate-user-content",level:2},{value:"Stored regex translations",id:"stored-regex-translations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"regex-translation",children:"Regex Translation"})}),"\n",(0,s.jsx)(n.admonition,{title:"motivation",type:"note",children:(0,s.jsxs)(n.p,{children:["At the time of writing, there is no built-in Logic App functionality available to run regular expression replacements without using ",(0,s.jsx)(n.code,{children:"inline code"}),". The Invictus ",(0,s.jsx)(n.strong,{children:"Regex Translation"})," Framework component was created to fill this missing gap, by providing a HTTP-endpoint to run regular expression replacements. Available translations are stored in an Azure Table Storage."]})}),"\n",(0,s.jsx)(n.h2,{id:"regex-translate-user-content",children:"Regex translate user content"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Regex Translation"})," component has a single endpoint available: ",(0,s.jsx)(n.code,{children:"/api/RegexTranslation"}),". Given an user content and matched stored (Azure Table Storage) regex translation, the endpoint responds with the translated content."]}),"\n",(0,s.jsx)(n.p,{children:"The following request body properties must be supplied:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"JSON property"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Content"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"yes"}),(0,s.jsx)(n.td,{children:"User content that should translated."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MatchKey"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"yes"}),(0,s.jsxs)(n.td,{children:["Set of 'keys' that translates to ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/rest/api/storageservices/designing-a-scalable-partitioning-strategy-for-azure-table-storage",children:"Azure Table Storage partition keys"}),"."]})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.strong,{children:"Full request example"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// POST /api/RegexTranslation\n{\n  "Content": "The provided host name \'website.com\' could not be resolved",\n  "MatchKey": ["OrderService", "InvoiceService"]\n}\n'})})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.strong,{children:"Full response example"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// Found stored translation:\n// 200 OK <- /api/RegexTranslation\n{\n  "Content": "System could not reach endpoint \'website.com\' as it is not available, please contact John to follow-up.",\n  "IsTranslated": true,\n  "RowKey": "2f71ec69-1fff-4b80-9ae1-947a58e4a039"\n}\n\n// Did not found stored translation:\n// 200 OK <- /api/RegexTranslation\n{\n  "Content": "The provided host name \'website.com\' could not be resolved",\n  "IsTranslated": false,\n  "RowKey": ""\n}\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"stored-regex-translations",children:"Stored regex translations"}),"\n",(0,s.jsxs)(n.p,{children:["Regex translations should be stored in an Azure Table Storage table called ",(0,s.jsx)(n.code,{children:"RegexTranslator"})," (created automatically by Invictus). Each stored entity should have following custom properties:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Custom entity property name"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MatchPattern"})}),(0,s.jsxs)(n.td,{children:["The regular expression to match the incoming user ",(0,s.jsx)(n.code,{children:"Content"}),". It uses ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#named-matched-subexpressions",children:"named groups"})," to cut certain information from the content."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OutputPattern"})}),(0,s.jsxs)(n.td,{children:["The outgoing text, containing possible ",(0,s.jsx)(n.code,{children:"{group-name}"})," occurrences to paste the subtracted information."]})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.strong,{children:"Full translation example"})}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Entity property name"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RowKey"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"2f71ec69-1fff-4b80-9ae1-947a58e4a039"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"PartitionKey"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OrderService"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MatchPattern"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"\"The provided host name '(?<url>[^]*)' could not be resolved.\""})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OutputPattern"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"\"System could not reach endpoint '{url}' as it is not available, please contact John to follow-up.\""})})]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Translation happens with the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multiple pastes"}),": the subtracted information from named groups can be pasted more than once."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Single match"}),": the user ",(0,s.jsx)(n.code,{children:"Content"})," can only be matched to a single stored translation - the first match will be picked."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No pastes"}),": the ",(0,s.jsx)(n.code,{children:"OutputPattern"})," does not necessarily ",(0,s.jsx)(n.em,{children:"have"})," to contain ",(0,s.jsx)(n.code,{children:"{group-name}"})," occurrences, it can only contain text."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);