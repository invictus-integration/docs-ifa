"use strict";(self.webpackChunkinvictus_integration=self.webpackChunkinvictus_integration||[]).push([[4343],{5455:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/InvictusV2Diagram_Dashboard-2baabe7c04c3ebf7ed2414623a60a6aa.jpg"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},8728:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/InvictusV2Diagram_Framework-434195d6bfcd29cb7f4389e564863a33.jpg"},9682:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"architecture-diagram","title":"Invictus for Azure Architecture Diagrams","description":"Invictus Dashboard Architecture","source":"@site/versioned_docs/version-v6.0.0/architecture-diagram.md","sourceDirName":".","slug":"/architecture-diagram","permalink":"/docs-ifa/architecture-diagram","draft":false,"unlisted":false,"editUrl":"https://github.com/invictus-integration/docs-ifa/edit/master/docs/versioned_docs/version-v6.0.0/architecture-diagram.md","tags":[],"version":"v6.0.0","sidebarPosition":2,"frontMatter":{"sidebar_label":"Architecture","sidebar_position":2},"sidebar":"sidebar","previous":{"title":"Welcome","permalink":"/docs-ifa/"},"next":{"title":"Dashboard","permalink":"/docs-ifa/dashboard/"}}');var t=r(4848),i=r(8453);const a={sidebar_label:"Architecture",sidebar_position:2},o="Invictus for Azure Architecture Diagrams",c={},d=[{value:"Invictus Dashboard Architecture",id:"invictus-dashboard-architecture",level:2},{value:"Dashboard Components",id:"dashboard-components",level:3},{value:"Invictus Framework Architecture",id:"invictus-framework-architecture",level:2},{value:"Framework Components",id:"framework-components",level:3},{value:"Shared Components",id:"shared-components",level:2},{value:"Azure Service Bus",id:"azure-service-bus",level:3},{value:"Azure Storage",id:"azure-storage",level:3},{value:"Azure Application Insights",id:"azure-application-insights",level:3},{value:"Azure Key Vault",id:"azure-key-vault",level:3}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"invictus-for-azure-architecture-diagrams",children:"Invictus for Azure Architecture Diagrams"})}),"\n",(0,t.jsx)(n.h2,{id:"invictus-dashboard-architecture",children:"Invictus Dashboard Architecture"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Architecture diagram",src:r(5455).A+"",title:"Invictus dashboard architecture diagram",width:"1140",height:"839"})}),"\n",(0,t.jsx)(n.h3,{id:"dashboard-components",children:"Dashboard Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Frontend:"})," Consists of the web application which is used to monitor all flows in the system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dashboard Gateway:"})," Serves as the backend for the web application, handles all interactions with the database and other dependencies."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flow Handler:"})," Handles interactions with the Azure management api for the flow actions (Ignore, Resubmit, Resume), flow alerts and message content view features."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Import Functions:"})," Consist of ImportJob, CacheImportJob and StoreImportJob. The ImportJob functions are used to listen on EventHub for all LogicApp executions, all data is then merged and finally pushed to the Database."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CosmosDB:"})," Stores all the data necessary for the frontend to function such as users, folders, settings. Flow data and workflowevents are also saved to the CosmosDB by the ",(0,t.jsx)(n.em,{children:"DatabaseManager"})," function."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Hub:"})," Logic App diagnostic messages are sent to event hub where they are picked up and processed by the Invictus import functions."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"invictus-framework-architecture",children:"Invictus Framework Architecture"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Architecture diagram",src:r(8728).A+"",title:"Invictus framework architecture diagram",width:"1512",height:"786"})}),"\n",(0,t.jsx)(n.h3,{id:"framework-components",children:"Framework Components"}),"\n",(0,t.jsxs)(n.p,{children:["Various useful APIs and Functions which can be used within your Logic App integration processes. For more information see the ",(0,t.jsx)(n.a,{href:"/docs-ifa/framework/",children:"Invictus framework documentation"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"PubSub API"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Transco API"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Matrix API"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"TimeSequencer Function"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Sequence Controller Function"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"XML/JSON Convertor Function"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"XSD Validator Function"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Regex Translator Function"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"TranscoV2 Function"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"shared-components",children:"Shared Components"}),"\n",(0,t.jsx)(n.h3,{id:"azure-service-bus",children:"Azure Service Bus"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Used by PubSub API to push messages to subscriptions."}),"\n",(0,t.jsx)(n.li,{children:"Used by ImportJob function to push data to CacheImportJob function after splitting data by ClientTrackingId."}),"\n",(0,t.jsx)(n.li,{children:"Used by the dashboard to queue requests for Ignore/Resume/Resubmit which are then picked up by the Flow Handler."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"azure-storage",children:"Azure Storage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Used by PubSub API to create Blobs for ClaimCheck pattern"}),"\n",(0,t.jsx)(n.li,{children:"Used by CacheImportJob to save all events received from EventHub as a temporary cache"}),"\n",(0,t.jsx)(n.li,{children:"Used by Transco API and Transco V2 function to store configs, XSLT files and assembly files."}),"\n",(0,t.jsx)(n.li,{children:"Used by XML/JSON Convertor function to store configs."}),"\n",(0,t.jsx)(n.li,{children:"Used by XSD Validator function to store configs."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"azure-application-insights",children:"Azure Application Insights"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All APIs, WebApps, and Functions point to a Application Insights resource which contains all traces and logs that were created."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"azure-key-vault",children:"Azure Key Vault"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Used to store secrets such as function keys, API keys, connection strings, etc."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);