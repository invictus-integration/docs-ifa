"use strict";(self.webpackChunkinvictus_integration=self.webpackChunkinvictus_integration||[]).push([[8992],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}},9579:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"dashboard/flows/import-flow-traces/import-flow-prog-via-http","title":"Import flow traces programmatically via HTTP","description":"Invictus allows developers to programmatically import flow traces via a HTTP endpoint. This resource can be located by the following name format:","source":"@site/versioned_docs/version-v6.0.0/dashboard/flows/04_import-flow-traces/import-flow-prog-via-http.md","sourceDirName":"dashboard/flows/04_import-flow-traces","slug":"/dashboard/flows/import-flow-traces/import-flow-prog-via-http","permalink":"/docs-ifa/dashboard/flows/import-flow-traces/import-flow-prog-via-http","draft":false,"unlisted":false,"editUrl":"https://github.com/invictus-integration/docs-ifa/edit/master/docs/versioned_docs/version-v6.0.0/dashboard/flows/04_import-flow-traces/import-flow-prog-via-http.md","tags":[],"version":"v6.0.0","frontMatter":{},"sidebar":"sidebar","previous":{"title":"Import flow traces programmatically via Azure Event Hubs","permalink":"/docs-ifa/dashboard/flows/import-flow-traces/import-flow-prog-via-eh"},"next":{"title":"Import flow traces via Azure Data Factory pipelines","permalink":"/docs-ifa/dashboard/flows/import-flow-traces/import-flow-via-df"}}');var r=t(4848),a=t(8453);const i={},s="Import flow traces programmatically via HTTP",l={},d=[{value:"Sending flow traces to Invictus",id:"sending-flow-traces-to-invictus",level:2},{value:"Map Dashboard flows to HTTP receive events",id:"map-dashboard-flows-to-http-receive-events",level:2},{value:"Execution tree of sequentially events",id:"execution-tree-of-sequentially-events",level:2},{value:"Tracked properties of events",id:"tracked-properties-of-events",level:2},{value:"Errors on events",id:"errors-on-events",level:3},{value:"Azure link on events",id:"azure-link-on-events",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"import-flow-traces-programmatically-via-http",children:"Import flow traces programmatically via HTTP"})}),"\n",(0,r.jsx)(n.p,{children:"Invictus allows developers to programmatically import flow traces via a HTTP endpoint. This resource can be located by the following name format:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"https://inv-{env}-we-sft-httpreceiver.*.northeurope.azurecontainerapps.io"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sending-flow-traces-to-invictus",children:"Sending flow traces to Invictus"}),"\n",(0,r.jsxs)(n.p,{children:["The HTTP flow import accepts a series of ",(0,r.jsx)(n.code,{children:"event"})," models in a JSON array, each representing a status of the flow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"curl -X POST --data '[\n   {\n      // Flow started event.\n   },\n   {\n      // Flow completed event.\n   }\n]' https://inv-{env}-we-sft-httpreceiver.*\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The minimal ",(0,r.jsx)(n.code,{children:"event"})," values are defined as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// event\n{\n   // When event was executed, recommended UTC datetime.\n   // (used to determine the order of events)\n   "Time":"2019-07-23 08:55:04.0500000 +00:00",\n\n   // Transactional ID to link events together.\n   // (like \'client tracking ID\')\n   "ChainId": "edbd5ddb-b206-4437-8ac3-5401b148c8cb",\n\n   // Represents a single \'step\' taken in the transaction of events.\n   // (like workflow \'Started\')\n   "Step": {\n      // Operation ID within the transaction of events.\n      // (like \'workflow run ID\')\n      "Id": "8ecd1ea4-de94-4741-9c4a-a18477398299",\n\n      // Human-readable name for the operation/step ID.\n      "Name": "Invoice",\n\n      // Available values are:\n      // - Started\n      // - Active\n      // - Cancelled\n      // - Completed\n      // -Failed\n      "Status": "Started"\n   }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"Started"})," event is always required to create at least a single event in Invictus' backend storage. A ",(0,r.jsx)(n.code,{children:"Completed"}),"/",(0,r.jsx)(n.code,{children:"Failed"})," event then indicates the end of a given operation."]})}),"\n",(0,r.jsx)(n.h2,{id:"map-dashboard-flows-to-http-receive-events",children:"Map Dashboard flows to HTTP receive events"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure that any of the ",(0,r.jsx)(n.code,{children:"event"})," mappings match the the values in the ",(0,r.jsx)(n.a,{href:"/docs-ifa/dashboard/flows/add",children:"flow created via the Dashboard"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// event\n{\n   // [omitted]\n   "Mappings": {\n      "Domain": "Invoicing",\n      "Action": "New invoice",\n      "Service": "Invoice system",\n      "Version": "v1.2.3"\n   }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"execution-tree-of-sequentially-events",children:"Execution tree of sequentially events"}),"\n",(0,r.jsxs)(n.p,{children:["To create parent-child relationships, the ",(0,r.jsx)(n.code,{children:"Step.Id"}),"/",(0,r.jsx)(n.code,{children:"Step.ParentId"})," combination\nis used. This link is similar as how the ",(0,r.jsx)(n.code,{children:"x-iv-parent-workflow-run-id"})," is set when importing flows via Azure Logic App workflows."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n   // event\n   {\n      // [omitted]\n      "Step": {\n         "Id": "8ecd1ea4-de94-4741-9c4a-a18477398299"\n         // [omitted]\n      }\n   },\n   // event\n   {\n      // [omitted]\n      "Step": {\n         "Id": "3e8e3fa4-b85a-4ee6-aaea-e0fd82008f8c",\n         "ParentId": "8ecd1ea4-de94-4741-9c4a-a18477398299"\n         // [omitted]\n      }\n   }\n]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"tracked-properties-of-events",children:"Tracked properties of events"}),"\n",(0,r.jsxs)(n.p,{children:["Besides the ",(0,r.jsx)(n.code,{children:"Milestone"})," and ",(0,r.jsx)(n.code,{children:"EventText"}),", there also exists a set of custom ",(0,r.jsx)(n.code,{children:"Data"})," properties that can be linked to the flow."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// event\n{\n   // [omitted]\n   "Properties": {\n      "Milestone": "LA-A-Reached",\n      "EventText": "Line1-A",\n      "Data": {\n         "MyKey1": "MyValue1",\n         "MyKey2": "MyValue2"\n      }\n   }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"errors-on-events",children:"Errors on events"}),"\n",(0,r.jsxs)(n.p,{children:["If an event represents an error, it can provide additional information in the form of a ",(0,r.jsx)(n.code,{children:"code"})," and a ",(0,r.jsx)(n.code,{children:"description"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// event\n{\n   // [omitted]\n   "Error": {\n      "Code": "123",\n      "Description": "there was a failure during this operation"\n   }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"azure-link-on-events",children:"Azure link on events"}),"\n",(0,r.jsx)(n.p,{children:"If an event can be traced back to an Azure resource, this information can be added to the event so that it can be provided as details in the Dashboard."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// event\n{\n   "Azure": {\n      "ResourceId": "/subscriptions/.../resourceGroups/...",\n      "PortalLink": "https://portal.azure.com/to-your-resource"\n   }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);