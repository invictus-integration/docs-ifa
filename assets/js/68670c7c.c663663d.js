"use strict";(self.webpackChunkinvictus_integration=self.webpackChunkinvictus_integration||[]).push([[329],{682:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/pseudo-logic-app-w-pubsub-86de5df8ab3c989f9653d8d712b5eaf8.png"},7440:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"framework/pubsubV2","title":"PubSub V2","description":"Asynchronous messaging helps with decoupling publishers from consumers, as it avoids the blocking during publishing. Especially in Azure Logic Apps workflows, where the publisher and consumer is not always synchronous.","source":"@site/versioned_docs/version-v6.0.0/framework/pubsubV2.md","sourceDirName":"framework","slug":"/framework/pubsubV2","permalink":"/docs-ifa/framework/pubsubV2","draft":false,"unlisted":false,"editUrl":"https://github.com/invictus-integration/docs-ifa/edit/master/docs/versioned_docs/version-v6.0.0/framework/pubsubV2.md","tags":[],"version":"v6.0.0","frontMatter":{"sidebar_label":"Publish and subscribe"},"sidebar":"sidebar","previous":{"title":"Exception handling","permalink":"/docs-ifa/framework/exceptionHandler"},"next":{"title":"Regex Translation","permalink":"/docs-ifa/framework/regextranslation"}}');var r=n(4848),t=n(8453);const c={sidebar_label:"Publish and subscribe"},a="PubSub V2",d={},o=[{value:"Available endpoints",id:"available-endpoints",level:2},{value:"\u27a1\ufe0f Publish single message",id:"\ufe0f-publish-single-message",level:2},{value:"\u2b05\ufe0f Subscribe for messages",id:"\ufe0f-subscribe-for-messages",level:2},{value:"\u2714\ufe0f Acknowledge message",id:"\ufe0f-acknowledge-message",level:2},{value:"Customization",id:"customization",level:2},{value:"Migrating PubSub v1 to v2",id:"migrating-pubsub-v1-to-v2",level:2}];function l(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"pubsub-v2",children:"PubSub V2"})}),"\n",(0,r.jsxs)(s.admonition,{title:"motivation",type:"note",children:[(0,r.jsx)(s.p,{children:"Asynchronous messaging helps with decoupling publishers from consumers, as it avoids the blocking during publishing. Especially in Azure Logic Apps workflows, where the publisher and consumer is not always synchronous."}),(0,r.jsx)(s.p,{children:"Invictus provides a solution called the PubSub, that allows Azure Service Bus to act as a message broker and interact in a publish/subscribe-approach via HTTP endpoints; plus having Azure Blob Storage act as a claim-check provider for when messages are to big to be published directly."}),(0,r.jsx)(s.p,{children:(0,r.jsxs)(s.em,{children:["\ud83d\udd17 See also the ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber",children:"Publisher-Subscriber integration pattern"}),"."]})})]}),"\n",(0,r.jsx)(s.h2,{id:"available-endpoints",children:"Available endpoints"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"#%EF%B8%8F-publish-single-message",children:(0,r.jsx)(s.code,{children:"/api/Publish"})}),": by sending a HTTP request with a custom content, it places a message on an Azure Service Bus topic."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"#%EF%B8%8F-subscribe-for-messages",children:(0,r.jsx)(s.code,{children:"/api/Subscribe"})}),": by sending a HTTP request with a specified Azure Service Bus topic subscription name, it response available messages."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"#%EF%B8%8F-acknowledge-message",children:(0,r.jsx)(s.code,{children:"/api/Acknowledge"})}),": by sending a HTTP request with a specified message sequence number, it settles the Azure Service Bus message."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"PubSub pseudo Logic App diagram",src:n(682).A+"",width:"1003",height:"601"})}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-publish-single-message",children:"\u27a1\ufe0f Publish single message"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"/api/Publish"})," endpoint allows users to send a single message to the configured Azure Service Bus topic (default: ",(0,r.jsx)(s.code,{children:"pubsubv2router"}),") where subscribers are listening to."]}),"\n",(0,r.jsx)(s.p,{children:"The following request properties must/can be supplied:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"JSON property"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Required (default)"}),(0,r.jsxs)(s.th,{children:["Translates to ",(0,r.jsx)(s.code,{children:"ServiceBusMessage"})]}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Content"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusmessage.body?view=azure-dotnet#azure-messaging-servicebus-servicebusmessage-body",children:(0,r.jsx)(s.code,{children:"Body"})})}),(0,r.jsxs)(s.td,{children:["Raw binary content for the message. If exceeds certain size (default ",(0,r.jsx)(s.code,{children:"20 000 bytes"}),"), then the claim-check pattern will be applied: The message gets send with an empty body, and the content gets saved in Azure Blob Storage. The ",(0,r.jsx)(s.em,{children:"Subscribe"})," action automatically loads the content based on specific application properties from either the message itself or from Blob Storage."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Context"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusmessage.applicationproperties?view=azure-dotnet#azure-messaging-servicebus-servicebusmessage-applicationproperties",children:(0,r.jsx)(s.code,{children:"ApplicationProperties"})})}),(0,r.jsxs)(s.td,{children:["User-provided properties, will be appended with the HTTP request headers ",(0,r.jsx)(s.code,{children:"x-ms-client-tracking-id"})," and ",(0,r.jsx)(s.code,{children:"x-ms-workflow-run-id"})," if present"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"MessageId"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"no (new GUID)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusmessage.messageid?view=azure-dotnet#azure-messaging-servicebus-servicebusmessage-messageid",children:(0,r.jsx)(s.code,{children:"MessageId"})})}),(0,r.jsx)(s.td,{children:"Optional message ID for duplicate detection purposes."})]})]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Full request example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'// POST /api/Publish\n{\n  "Content": "ew0KICAiQ291bnRyeUNvZGUiOiAiQkUiLA0KICAiTW9uZXkiOiAgeyAiQW1vdW50IjogIDUwLCAiQ3VycmVuY3kiOiAgIkdCUCIgIH0NCn0NCg==",\n  "MessageId": "b0f11049-7f4d-4bae-90b2-91d93e69367d",\n  "Context": {\n    "x-applicationName": "InvoiceApp",\n    "x-batchId": "975f7ea4-6247-431b-afb6-6d27fb47516f",\n    "x-conversationId": "29500405-d7cf-4877-a72b-a3288cff9dc0",\n    "x-correlationId": "fc13d345-ebd7-44f2-89a9-4371258c0a08"\n  }\n}\n'})})]}),"\n",(0,r.jsxs)(s.p,{children:["The endpoint will respond with ",(0,r.jsx)(s.code,{children:"202 Accepted"}),", if the message got published successfully."]}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-subscribe-for-messages",children:"\u2b05\ufe0f Subscribe for messages"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"/api/Subscribe"})," endpoint allows users to periodically ask for any available published messages on the configured Azure Service Bus topic (default: ",(0,r.jsx)(s.code,{children:"pubsubv2router"}),")."]}),"\n",(0,r.jsx)(s.p,{children:"The following request properties must/can be supplied:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"JSON property"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Required (default)"}),(0,r.jsx)(s.th,{children:"Translates to Service Bus"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Subscription"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.administration.createsubscriptionoptions.subscriptionname?view=azure-dotnet#azure-messaging-servicebus-administration-createsubscriptionoptions-subscriptionname",children:(0,r.jsx)(s.code,{children:"SubscriptionName"})})}),(0,r.jsxs)(s.td,{children:["Name of Azure Service Bus topic subscription, gets created if not exists. (Name is also used as name of the ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.administration.ruleproperties.name?view=azure-dotnet#azure-messaging-servicebus-administration-ruleproperties-name",children:(0,r.jsx)(s.code,{children:"Rule"})}),".)"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Filter"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"no (subscribe on all messages)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.administration.sqlrulefilter.sqlexpression?view=azure-dotnet#azure-messaging-servicebus-administration-sqlrulefilter-sqlexpression",children:(0,r.jsx)(s.code,{children:"SqlExpression"})})}),(0,r.jsx)(s.td,{children:"Optional SQL expression that acts as a filter rule for which messages to subscribe on."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"BatchSize"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"no (10)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceiver.receivemessagesasync?view=azure-dotnet#azure-messaging-servicebus-servicebusreceiver-receivemessagesasync(system-int32-system-nullable((system-timespan))-system-threading-cancellationtoken)",children:(0,r.jsx)(s.code,{children:"BatchSize"})})}),(0,r.jsx)(s.td,{children:"Maximum messages to receive during this single call."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"TimeoutMilliseconds"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"no (1min)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceiver.receivemessagesasync?view=azure-dotnet#azure-messaging-servicebus-servicebusreceiver-receivemessagesasync(system-int32-system-nullable((system-timespan))-system-threading-cancellationtoken)",children:(0,r.jsx)(s.code,{children:"MaxWaitTime"})})}),(0,r.jsx)(s.td,{children:"Maximum time to wait for a message before responding with an empty set of messages."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ShouldDeleteOnReceive"})}),(0,r.jsxs)(s.td,{style:{textAlign:"center"},children:["no (",(0,r.jsx)(s.code,{children:"false"}),")"]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceivemode?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"ReceiveAndDelete"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"false"})," (default) means ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceivemode?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"PeekLock"})}),", ",(0,r.jsx)(s.code,{children:"true"})," means receiving messages with ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceivemode?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"ReceiveAndDelete"})}),". ",(0,r.jsx)("br",{}),(0,r.jsx)("br",{})," ",(0,r.jsxs)(s.strong,{children:["\u26a0\ufe0f In some rare cases, the use of ",(0,r.jsx)(s.code,{children:"ShouldDeleteOnReceive=true"})," could cause messages to be lost, for example when an error occurs on the client-side and the sequence number is lost or when cancelled/scaled-down happens at the exact moment the message was received (and deleted) from the topic subscription."]})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SkipSubscriptionUpsert"})}),(0,r.jsxs)(s.td,{style:{textAlign:"center"},children:["no (",(0,r.jsx)(s.code,{children:"false"}),")"]}),(0,r.jsx)(s.td,{children:"create/update subscription and rule"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"true"})," means there should already be a topic subscription available, ",(0,r.jsx)(s.code,{children:"false"})," (default) means that a subscription will be created with the provided ",(0,r.jsx)(s.code,{children:"Filter"}),"."]})]})]})]}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["One can also use the HTTP request query parameters instead of the request body to ",(0,r.jsx)(s.code,{children:"POST"})," to the ",(0,r.jsx)(s.code,{children:"/api/Subscribe"})," endpoint: ",(0,r.jsx)(s.code,{children:"/api/Subscribe?Subscription=orderProcessor"}),"."]})}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Full request example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'// POST -> /api/Subscribe\n{\n    "Subscription": "orderProcessor",\n    "Filter": "sys.label = \'OrderCreated\'",\n    "BatchSize": 11,\n    "TimeoutMilliseconds": 30000,\n    "ShouldDeleteOnReceive": false,\n    "SkipSubscriptionUpsert": false\n}\n'})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Full response example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'// 200 OK <- /api/Subscribe\n[\n    {\n        "subscription": "orderProcessor",\n        "content": "ew0KICAiQ291bnRyeUNvZGUiOiAiQkUiLA0KICAiTW9uZXkiOiAgeyAiQW1vdW50IjogIDUwLCAiQ3VycmVuY3kiOiAgIkdCUCIgIH0NCn0NCg==",\n        "context": {\n            "x-applicationName": "InvoiceApp",\n            "x-batchId": "975f7ea4-6247-431b-afb6-6d27fb47516f",\n            "x-conversationId": "29500405-d7cf-4877-a72b-a3288cff9dc0",\n            "x-correlationId": "fc13d345-ebd7-44f2-89a9-4371258c0a08",\n            "x-ms-client-tracking-id": "test",\n            "Diagnostic-Id": "00-0cc7ed09eeaa51b0e835d90890aefb60-b0a02deac9f6fe6d-00"\n        },\n        "sequenceNumber": 99\n    },\n    ...\n]\n'})})]}),"\n",(0,r.jsx)(s.admonition,{title:"internal workaround",type:"warning",children:(0,r.jsxs)(s.p,{children:["Because messages can be 'acknowledged' separately from the location where it is received by 'subscription', the message is internally ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/azure/service-bus-messaging/message-deferral",children:"deferred"}),". This is due to restrictions in the Azure SDK which impose that a message can only be settled by the same receiver instance which received the message. Deferring a message allows it to be picked up by any receiver."]})}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-acknowledge-message",children:"\u2714\ufe0f Acknowledge message"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"/api/Acknowledge"})," endpoint allows users to 'settle' a previously received message via the ",(0,r.jsxs)(s.a,{href:"#%EF%B8%8F-subscribe-for-messages",children:[(0,r.jsx)(s.code,{children:"/api/Subscribe"})," endpoint"]}),". The ",(0,r.jsx)(s.strong,{children:"sequence number"})," of the message is required to run this operation."]}),"\n",(0,r.jsx)(s.p,{children:"The following request properties must/can be supplied:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"JSON Property"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Required (default)"}),(0,r.jsx)(s.th,{children:"Translates to Service Bus"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Subscription"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusclient.createreceiver?view=azure-dotnet#azure-messaging-servicebus-servicebusclient-createreceiver(system-string-system-string)",children:(0,r.jsx)(s.code,{children:"CreateReceiver"})})}),(0,r.jsxs)(s.td,{children:["Name of Azure Service Bus topic subscription to receive the deferred message on (See ",(0,r.jsx)(s.strong,{children:"internal workaround"})," on ",(0,r.jsx)(s.a,{href:"#%EF%B8%8F-subscribe-for-messages",children:(0,r.jsx)(s.code,{children:"/api/Subscribe"})}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SequenceNumber"})}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusreceiver.receivedeferredmessageasync?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"ReceiveDeferredMessage"})})}),(0,r.jsxs)(s.td,{children:["Unique number assigned by Service Bus, received by the ",(0,r.jsx)(s.a,{href:"#%EF%B8%8F-subscribe-for-messages",children:(0,r.jsx)(s.code,{children:"/api/Subscribe"})})," response."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"AcknowledgementType"})}),(0,r.jsxs)(s.td,{style:{textAlign:"center"},children:["no (",(0,r.jsx)(s.code,{children:"Complete"}),")"]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/azure/service-bus-messaging/message-transfers-locks-settlement",children:"Message settlement"})}),(0,r.jsxs)(s.td,{children:["Type of acknowledge action to take on the message: ",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)(s.code,{children:"Complete"})}),(0,r.jsx)("li",{children:(0,r.jsx)(s.code,{children:"Abandon"})}),(0,r.jsx)("li",{children:(0,r.jsx)(s.code,{children:"Defer"})}),(0,r.jsx)("li",{children:(0,r.jsx)(s.code,{children:"DeadLetter"})})]})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"IgnoreNotFoundException"})}),(0,r.jsxs)(s.td,{style:{textAlign:"center"},children:["no (",(0,r.jsx)(s.code,{children:"false"}),")"]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-exceptions-latest",children:(0,r.jsx)(s.code,{children:"MessageNotFound"})})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"true"})," means that ",(0,r.jsx)(s.code,{children:"MessageNotFound"})," Service Bus failures during lookup of the message by its ",(0,r.jsx)(s.code,{children:"SequenceNumber"})," will result in ",(0,r.jsx)(s.code,{children:"202 Accepted"}),"; ",(0,r.jsx)(s.code,{children:"false"})," means a ",(0,r.jsx)(s.code,{children:"400 BadRequest"})," will be responded."]})]})]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Full request example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'// POST /api/Acknowledge\n{\n    "Subscription": "subscriptionName",\n    "AcknowledgementType":"Complete",\n    "SequenceNumber": 99,\n    "IgnoreNotFoundException": false,\n}\n'})})]}),"\n",(0,r.jsx)(s.h2,{id:"customization",children:"Customization"}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Available Bicep parameters"})}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Bicep parameter"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"pubSubV2TopicName"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"pubsubv2router"})}),(0,r.jsx)(s.td,{children:"Name of Azure Service Bus topic that acts as message broker for the PubSub V2 component."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"approvedMessageSizeInBytes"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200000"})," (",(0,r.jsx)(s.code,{children:"200 KB"}),")"]}),(0,r.jsx)(s.td,{children:"Threshold when Azure Service Bus messages' contents should be saved to Blob Storage, a.k.a. claim-checked."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blobContainerPrefix"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"invictus"})," (final container name: ",(0,r.jsx)(s.code,{children:"{blobContainerPrefix}{pubSubV2TopicName}"}),")"]}),(0,r.jsx)(s.td,{children:"Prefix of the Azure Blob Storage container that gets created when messages are to big to be routed via Service Bus and gets saved in a container instead, a.k.a. claim-checked."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"serviceBusMessageTimeToLiveMinutes"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"30 days"})}),(0,r.jsxs)(s.td,{children:["Period the published message should be active on the Azure Service Bus topic (translates to ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.servicebusmessage.timetolive?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"TimeToLive"})}),")."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"pubSubSubscriptionLockTimeoutInMinutes"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"1 min"})}),(0,r.jsxs)(s.td,{children:["Duration of the peek lock receive, see ",(0,r.jsx)(s.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.messaging.servicebus.administration.createsubscriptionoptions.lockduration?view=azure-dotnet",children:(0,r.jsx)(s.code,{children:"LockDuration"})}),"."]})]})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"migrating-pubsub-v1-to-v2",children:"Migrating PubSub v1 to v2"}),"\n",(0,r.jsx)(s.p,{children:"Migrating to v2 includes changes in the authentication, endpoint and removal the metadata links."}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["\ud83d\udc49 ",(0,r.jsxs)(s.em,{children:["The ",(0,r.jsx)(s.code,{children:"/api/Subscribe"})," endpoint also needs to use a ",(0,r.jsx)(s.code,{children:"POST"})," instead of a ",(0,r.jsx)(s.code,{children:"GET"})," HTTP method."]})]}),"\n"]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Publish message example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-diff",children:'{\n    "PublishMessage": {\n        "type": "Http",\n        "inputs": {\n            "authentication": {\n-               "password": "@parameters(\'invictusPassword\')",\n-               "type": "Basic",\n-               "username": "Invictus"\n+               "audience": "[parameters(\'invictus\').authentication.audience]",\n+               "identity": "[parameters(\'infra\').managedIdentity.id]",\n+               "type": "ManagedServiceIdentity"\n            },\n            "method": "post",\n-           "uri": "[parameters(\'invictus\').framework.pubSub.v1.publishUrl]",\n+           "uri": "[parameters(\'invictus\').framework.pubSub.v2.publishUrl]",\n            "body": {\n                "Content": "@{decodeBase64(body(\'Extract_Message_Context\')[\'Content\'])}",\n                "Context": "@body(\'Extract_Message_Context\')?[\'Context\']"\n            },\n        },\n-       "metadata": {\n-           "apiDefinitionUrl": "[parameters(\'invictus\').framework.pubSub.definitionUrl]",\n-           "swaggerSource": "custom"\n-       },\n        "runAfter": {\n            "Extract_Message_Context": [\n                "Succeeded"\n            ]\n        }\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Subscribe message example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-diff",children:'{\n    "SubscribeMessage": {\n        "type": "Http"\n        "inputs": {\n            "authentication": {\n-               "password": "@parameters(\'invictusPassword\')",\n-               "type": "Basic",\n-               "username": "Invictus"\n+               "audience": "[parameters(\'invictus\').authentication.audience]",\n+               "identity": "[parameters(\'infra\').managedIdentity.id]",\n+               "type": "ManagedServiceIdentity"\n            },\n-           "method": "get",\n+           "method": "post",\n            "queries": {\n                "deleteOnReceive": false,\n                "filter": "Domain = \'B2B-Gateway\' AND Action = \'EDI\' AND Version = \'1.0\'",\n                "subscription": "[concat(substring(variables(\'logicAppName\'), max(createarray(0, sub(length(variables(\'logicAppName\')), 36)))), \'-\', uniquestring(variables(\'logicAppName\')))]"\n            },\n-           "uri": "[parameters(\'invictus\').framework.pubSub.v1.subscribeUrl]",\n+           "uri": "[parameters(\'invictus\').framework.pubSub.v2.subscribeUrl]", \n        },\n-       "metadata": {\n-           "apiDefinitionUrl": "[parameters(\'invictus\').framework.pubSub.definitionUrl]",\n-           "swaggerSource": "custom"\n-       },\n        "recurrence": {\n            "frequency": "Second",\n            "interval": 1\n        },\n        "splitOn": "@triggerBody()",\n        "splitOnConfiguration": {\n            "correlation": {\n                "clientTrackingId": "@triggerBody()[\'Context\'][\'x-ms-client-tracking-id\']"\n            }\n        }\n    }\n}\n'})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)(s.strong,{children:"Acknowledge message example"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-diff",children:'{\n    "AcknowledgeMessage": {\n        "type": "Http",\n        "inputs": {\n            "authentication": {\n-               "password": "@parameters(\'invictusPassword\')",\n-               "type": "Basic",\n-               "username": "Invictus"\n+               "audience": "[parameters(\'invictus\').authentication.audience]",\n+               "identity": "[parameters(\'infra\').managedIdentity.id]",\n+               "type": "ManagedServiceIdentity"\n            },\n            "body": {\n                "AcknowledgementType": "Complete",\n                "IgnoreNotFoundException": true,\n                "Subscription": "@triggerBody()?[\'subscription\']",\n-               "LockToken": "@triggerBody()?[\'LockToken\']",\n-               "MessageReadTime": "@trigger()[\'startTime\']"\n            },\n            "method": "post",\n-           "uri": "[parameters(\'invictus\').framework.pubSub.v1.acknowledgeUrl]",\n+           "uri": "[parameters(\'invictus\').framework.pubSub.v2.acknowledgeUrl]",\n        },\n-       "metadata": {\n-           "apiDefinitionUrl": "[parameters(\'invictus\').framework.pubSub.v1.definitionUrl]",\n-           "swaggerSource": "custom"\n-       },\n        "runAfter": {}\n    }\n}\n'})})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>a});var i=n(6540);const r={},t=i.createContext(r);function c(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);